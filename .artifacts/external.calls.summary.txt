# External API Calls

## Clockify Core API (via clockifyClient)
- getTimeEntry - GET /workspaces/{wid}/time-entries/{id}
- patchTimeEntryCustomFields - PATCH /workspaces/{wid}/time-entries/{id}
- listWebhooks - GET /workspaces/{wid}/addons/{aid}/webhooks
- createWebhook - POST /workspaces/{wid}/addons/{aid}/webhooks
- deleteWebhook - DELETE /workspaces/{wid}/addons/{aid}/webhooks/{webhookId}
- getCustomFields - GET /workspaces/{wid}/custom-fields

## Clockify Reports API
- getDetailedReport - POST /workspaces/{wid}/reports/detailed
  - Uses reportsBaseUrl derived from JWT or env CLOCKIFY_REGION
  - Includes detailedFilter object (required for PRO)
  - Page size capped at 200
  - Region derivation: backendUrl → reportsUrl transformation

## Region & Host Derivation
- buildBaseUrl() - Uses CONFIG.CLOCKIFY_REGION or CONFIG.CLOCKIFY_BASE_URL
- buildReportsBaseUrl() - Transforms api.clockify.me → reports.api.clockify.me
- baseUrlOverride parameter threads through all calls
- JWT backendUrl claim should drive URLs in production

## Auth Token Priority
1. Per-request authToken parameter
2. CONFIG.ADDON_TOKEN (from env)
3. CONFIG.API_KEY (from env)

## Rate Limiting
- RateLimitError thrown on 429 status
- Retry-After header parsed to retryAfterMs
- rateLimiter.schedule() wraps all requests by workspace key

## Security Notes
- authToken logged with truncation (first 20 chars)
- No observed token refresh logic
- No jti-based replay cache for requests
